generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 

model User {
  id                  String    @id @default(cuid())
  email               String    @unique @default("")
  emailVerified       DateTime?
  passwordDigest      String    @default("")
  phoneNumber         String?   @unique @default("")
  phoneNumberVerified DateTime?
  role                UserRole  @default(USER)
  inviteToken         String?   @unique
  lastLoggedInAt      DateTime?
  isTokenUsed         DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  invitedBy           String?
  pin                 String? // verification code
  pinCreatedAt        DateTime? // verification code created date
  pinType             String? //email or phone 
  pinVerifiedAt       DateTime? // verified date
  profile             Profile?
}

model Profile {
  id          String   @id @default(cuid())
  userId      String   @unique
  firstName   String   @default("")
  lastName    String   @default("")
  latinName   String   @default("")
  sex         String?
  dob         String?
  height      Int?
  weight      Int?
  picture     String?
  priceMin    Int?
  priceMax    Int?
  birthDate   String?
  notifyEmail Boolean  @default(true)
  notifyPush  Boolean  @default(true)
  notifyBadge Boolean  @default(true)
  historyId   String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
 

model PaymentPlan {
  id          String   @id @default(cuid())
  name        String   @default("")
  description String   @default("")
  price       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model SmsRequestAttempt {
  id          String   @id @default(cuid())
  phoneNumber String
  ipAddress   String
  createdAt   DateTime @default(now())
}

model FileUpload {
  id             String    @id @default(cuid())
  fileGroup      String?
  fileLink       String    @default("")
  fileSource     String    @default("")
  removedAt      DateTime?
  createdBy      String    @default("")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  fileCategory   String?
  fileSourceDate String?
  fileMIMEType   String
}

enum UserRole {
  USER
  ADMIN
}
